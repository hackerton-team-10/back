plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.9-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //OAuth Client
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //maria driver
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    //h2 DB
    runtimeOnly 'com.h2database:h2'

    //Spring Data Jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //ModelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'

    //Jasypt
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.5'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Springdoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // QueryDSL
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar{
    destinationDirectory = file("./target")
    archivesBaseName = 'back'
    archiveFileName = 'back.jar'
    archiveVersion = "0.0.1"
}